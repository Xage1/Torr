generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  name         String
  email        String   @unique
  passwordHash String
  phone        String?  
  role         Role     @default(CUSTOMER)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  orders Order[]
}

model Product {
  id         Int      @id @default(autoincrement())
  title      String
  description String?
  price      Decimal  @db.Decimal(12,2)
  stock      Int      @default(0)
  category   String?
  source     String   @default("MANUAL")
  externalId String?  
  imageUrls  String[] @default([])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  OrderItem OrderItem[]
}

model Order {
  id        Int      @id @default(autoincrement())
  user      User?    @relation(fields: [userId], references: [id])
  userId    Int?
  status    OrderStatus @default(PENDING)
  total     Decimal   @db.Decimal(12,2)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  OrderItem OrderItem[]
  Payment   Payment?
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId   Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
  price     Decimal @db.Decimal(12,2)
}

model Payment {
  id            Int     @id @default(autoincrement())
  order         Order   @relation(fields: [orderId], references: [id])
  orderId       Int     @unique
  method        String
  amount        Decimal @db.Decimal(12,2)
  status        PaymentStatus @default(PENDING)
  transactionId String?
  createdAt     DateTime @default(now())
}

model ScrapingJob {
  id      Int      @id @default(autoincrement())
  source  String
  status  ScrapeStatus @default(RUNNING)
  runAt   DateTime @default(now())
  message String?
}

enum Role {
  ADMIN
  CUSTOMER
}

enum OrderStatus {
  PENDING
  PAID
  SHIPPED
  CANCELLED
}

enum PaymentStatus {
  PENDING
  SUCCESS
  FAILED
}

enum ScrapeStatus {
  RUNNING
  SUCCESS
  FAILED
}